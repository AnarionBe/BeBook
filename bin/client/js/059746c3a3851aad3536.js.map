{"version":3,"sources":["webpack:////home/marco/Documents/BeCode/BeBook/node_modules/react-table/es/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_utils__WEBPACK_IMPORTED_MODULE_2__","_lifecycle__WEBPACK_IMPORTED_MODULE_3__","_methods__WEBPACK_IMPORTED_MODULE_4__","_defaultProps__WEBPACK_IMPORTED_MODULE_5__","_propTypes__WEBPACK_IMPORTED_MODULE_6__","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","sliceIterator","TypeError","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","ReactTable","_Methods","instance","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","getResolvedState","bind","getDataModel","getSortedData","fireFetchData","getPropOrState","getStateOrProp","filterData","sortData","getMinRows","onPageChange","onPageSizeChange","sortColumn","filterColumn","resizeColumnStart","resizeColumnEnd","resizeColumnMoving","state","page","defaultPage","pageSize","defaultPageSize","sorted","defaultSorted","expanded","defaultExpanded","filtered","defaultFiltered","resized","defaultResized","currentlyResizing","skipNextSort","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","resolvedState","children","className","style","getProps","getTableProps","getTheadGroupProps","getTheadGroupTrProps","getTheadGroupThProps","getTheadProps","getTheadTrProps","getTheadThProps","getTheadFilterProps","getTheadFilterTrProps","getTheadFilterThProps","getTbodyProps","getTrGroupProps","getTrProps","getTdProps","getTfootProps","getTfootTrProps","getTfootTdProps","getPaginationProps","getLoadingProps","getNoDataProps","getResizerProps","showPagination","showPaginationTop","showPaginationBottom","manual","loadingText","noDataText","sortable","multiSort","resizable","filterable","pivotIDKey","pivotValKey","pivotBy","subRowsKey","aggregatedKey","originalKey","indexKey","groupedByPivotKey","loading","pages","onExpandedChange","TableComponent","TheadComponent","TbodyComponent","TrGroupComponent","TrComponent","ThComponent","TdComponent","TfootComponent","PaginationComponent","LoadingComponent","SubComponent","NoDataComponent","ResizerComponent","ExpanderComponent","PivotValueComponent","PivotComponent","AggregatedComponent","FilterComponent","PadRowComponent","resolvedData","allVisibleColumns","headerGroups","hasHeaderGroups","sortedData","startRow","endRow","pageRows","slice","minRows","padRows","range","Math","max","hasColumnFooter","some","d","Footer","hasFilters","_recurseRowsViewIndex3","recurseRowsViewIndex","rows","path","index","map","row","rowWithViewIndex","_viewIndex","newPath","concat","get","_recurseRowsViewIndex","_recurseRowsViewIndex2","_recurseRowsViewIndex4","canPrevious","canNext","rowMinWidth","sum","resizedColumn","find","x","id","getFirstDefined","width","minWidth","rowIndex","finalState","rootProps","splitProps","tableProps","tBodyProps","loadingProps","noDataProps","makeHeaderGroup","column","resizedValue","col","flex","columns","maxWidth","theadGroupThProps","columnHeaderProps","getHeaderProps","classes","headerClassName","styles","headerStyle","rest","flexStyles","asPx","a","createElement","normalizeComponent","Header","data","makeHeader","resizedCol","sort","show","theadThProps","isResizable","resizer","onMouseDown","e","onTouchStart","isSortable","desc","includes","toggleSort","shiftKey","makeFilter","theadFilterThProps","filter","ResolvedFilterComponent","Filter","isFilterable","onChange","makePadColumn","tdProps","columnProps","makePadRow","trGroupProps","trProps","makeColumnFooter","tFootTdProps","columnFooterProps","getFooterProps","makePagination","isTop","paginationProps","makeTable","theadGroupProps","theadGroupTrProps","theadProps","theadTrProps","theadFilterProps","theadFilterTrProps","makePageRow","rowInfo","original","viewIndex","level","nestingPath","aggregated","groupedByPivot","subRows","isExpanded","join","i2","cellInfo","pivoted","expander","useOnExpanderClick","isBranch","isPreview","resolvedCell","Cell","ResolvedAggregatedComponent","Aggregated","aggregate","ResolvedExpanderComponent","Expander","ResolvedPivotValueComponent","PivotValue","DefaultResolvedPivotComponent","ResolvedPivotComponent","Pivot","expandable","indexOf","resolvedOnExpanderClick","newExpanded","clone","set","setStateWithData","interactionProps","onClick","tFootProps","tFootTrProps","propTypes","defaultProps","__webpack_exports__"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAA,WAA4a,gBAAAC,EAAAC,GAA2B,GAAAC,MAAAC,QAAAH,GAA0B,OAAAA,EAAc,GAAAI,OAAAC,YAAAC,OAAAN,GAA2C,OAAxf,SAAAA,EAAAC,GAAiC,IAAAM,EAAA,GAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAC,EAAoB,IAAM,QAAAC,EAAAC,EAAAb,EAAAI,OAAAC,cAA0CG,GAAAI,EAAAC,EAAAC,QAAAC,QAA4CR,EAAAS,KAAAJ,EAAAK,QAAqBhB,GAAAM,EAAAW,SAAAjB,GAAlCO,GAAA,IAAyE,MAAAW,GAAcV,GAAA,EAAWC,EAAAS,EAAY,QAAU,KAAMX,GAAAK,EAAA,QAAAA,EAAA,SAA2C,QAAU,GAAAJ,EAAA,MAAAC,GAAsB,OAAAH,EAA6Ha,CAAApB,EAAAC,GAAuC,UAAAoB,UAAA,yDAAjkB,GAEAC,EAAAhB,OAAAiB,QAAA,SAAAC,GAAmD,QAAAvB,EAAA,EAAgBA,EAAAwB,UAAAP,OAAsBjB,IAAA,CAAO,IAAAyB,EAAAD,UAAAxB,GAA2B,QAAA0B,KAAAD,EAA0BpB,OAAAsB,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDH,EAAAG,GAAAD,EAAAC,IAAiC,OAAAH,GAE/OO,EAAA,WAAgC,SAAAC,EAAAR,EAAAS,GAA2C,QAAAhC,EAAA,EAAgBA,EAAAgC,EAAAf,OAAkBjB,IAAA,CAAO,IAAAiC,EAAAD,EAAAhC,GAA2BiC,EAAAC,WAAAD,EAAAC,aAAA,EAAwDD,EAAAE,cAAA,EAAgC,UAAAF,MAAAG,UAAA,GAAuD/B,OAAAgC,eAAAd,EAAAU,EAAAP,IAAAO,IAA+D,gBAAAK,EAAAC,EAAAC,GAA2L,OAAlID,GAAAR,EAAAO,EAAAX,UAAAY,GAAqEC,GAAAT,EAAAO,EAAAE,GAA6DF,GAAxhB,GAiBgC1C,EAAA,EAAzB,IAEP6C,EAAA,SAAAC,GAGA,SAAAD,EAAAT,IApBA,SAAAW,EAAAL,GAAiD,KAAAK,aAAAL,GAA0C,UAAAlB,UAAA,qCAqB3FwB,CAAAC,KAAAJ,GAEA,IAAAK,EArBA,SAAAC,EAAAlB,GAAiD,IAAAkB,EAAa,UAAAC,eAAA,6DAAyF,OAAAnB,GAAA,iBAAAA,GAAA,mBAAAA,EAAAkB,EAAAlB,EAqBvJoB,CAAAJ,MAAAJ,EAAAS,WAAA7C,OAAA8C,eAAAV,IAAAZ,KAAAgB,OA6BA,OA3BAC,EAAAM,iBAAAN,EAAAM,iBAAAC,KAAAP,GACAA,EAAAQ,aAAAR,EAAAQ,aAAAD,KAAAP,GACAA,EAAAS,cAAAT,EAAAS,cAAAF,KAAAP,GACAA,EAAAU,cAAAV,EAAAU,cAAAH,KAAAP,GACAA,EAAAW,eAAAX,EAAAW,eAAAJ,KAAAP,GACAA,EAAAY,eAAAZ,EAAAY,eAAAL,KAAAP,GACAA,EAAAa,WAAAb,EAAAa,WAAAN,KAAAP,GACAA,EAAAc,SAAAd,EAAAc,SAAAP,KAAAP,GACAA,EAAAe,WAAAf,EAAAe,WAAAR,KAAAP,GACAA,EAAAgB,aAAAhB,EAAAgB,aAAAT,KAAAP,GACAA,EAAAiB,iBAAAjB,EAAAiB,iBAAAV,KAAAP,GACAA,EAAAkB,WAAAlB,EAAAkB,WAAAX,KAAAP,GACAA,EAAAmB,aAAAnB,EAAAmB,aAAAZ,KAAAP,GACAA,EAAAoB,kBAAApB,EAAAoB,kBAAAb,KAAAP,GACAA,EAAAqB,gBAAArB,EAAAqB,gBAAAd,KAAAP,GACAA,EAAAsB,mBAAAtB,EAAAsB,mBAAAf,KAAAP,GAEAA,EAAAuB,MAAA,CACAC,KAAAtC,EAAAuC,YACAC,SAAAxC,EAAAyC,gBACAC,OAAA1C,EAAA2C,cACAC,SAAA5C,EAAA6C,gBACAC,SAAA9C,EAAA+C,gBACAC,QAAAhD,EAAAiD,eACAC,mBAAA,EACAC,cAAA,GAEArC,EAmuBA,OAnxBA,SAAAsC,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAjE,UAAA,kEAAAiE,GAAuGD,EAAAzD,UAAAtB,OAAAiF,OAAAD,KAAA1D,UAAA,CAAyE4D,YAAA,CAAevE,MAAAoE,EAAAlD,YAAA,EAAAE,UAAA,EAAAD,cAAA,KAA6EkD,IAAAhF,OAAAmF,eAAAnF,OAAAmF,eAAAJ,EAAAC,GAAAD,EAAAlC,UAAAmC,GAcrXI,CAAAhD,EAswBEpC,OAAAV,EAAA,KAAAU,CAAQA,OAAAX,EAAA,KAAAW,CAAUlB,EAAA,gBAjuBpB2C,EAAAW,EAAA,EACAf,IAAA,SACAV,MAAA,WACA,IAAA0E,EAAA7C,KAEA8C,EAAA9C,KAAAO,mBACAwC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,MACAC,EAAAJ,EAAAI,SACAC,EAAAL,EAAAK,cACAC,EAAAN,EAAAM,mBACAC,EAAAP,EAAAO,qBACAC,EAAAR,EAAAQ,qBACAC,EAAAT,EAAAS,cACAC,EAAAV,EAAAU,gBACAC,EAAAX,EAAAW,gBACAC,EAAAZ,EAAAY,oBACAC,EAAAb,EAAAa,sBACAC,EAAAd,EAAAc,sBACAC,EAAAf,EAAAe,cACAC,EAAAhB,EAAAgB,gBACAC,EAAAjB,EAAAiB,WACAC,EAAAlB,EAAAkB,WACAC,EAAAnB,EAAAmB,cACAC,EAAApB,EAAAoB,gBACAC,EAAArB,EAAAqB,gBACAC,EAAAtB,EAAAsB,mBACAC,EAAAvB,EAAAuB,gBACAC,EAAAxB,EAAAwB,eACAC,EAAAzB,EAAAyB,gBACAC,EAAA1B,EAAA0B,eACAC,EAAA3B,EAAA2B,kBACAC,EAAA5B,EAAA4B,qBACAC,EAAA7B,EAAA6B,OACAC,EAAA9B,EAAA8B,YACAC,EAAA/B,EAAA+B,WACAC,EAAAhC,EAAAgC,SACAC,EAAAjC,EAAAiC,UACAC,EAAAlC,EAAAkC,UACAC,EAAAnC,EAAAmC,WACAC,EAAApC,EAAAoC,WACAC,EAAArC,EAAAqC,YACAC,EAAAtC,EAAAsC,QACAC,EAAAvC,EAAAuC,WACAC,EAAAxC,EAAAwC,cACAC,EAAAzC,EAAAyC,YACAC,EAAA1C,EAAA0C,SACAC,EAAA3C,EAAA2C,kBACAC,EAAA5C,EAAA4C,QACA/D,EAAAmB,EAAAnB,SACAF,EAAAqB,EAAArB,KACAI,GAAAiB,EAAAjB,OACAI,GAAAa,EAAAb,SACAE,GAAAW,EAAAX,QACAJ,GAAAe,EAAAf,SACA4D,GAAA7C,EAAA6C,MACAC,GAAA9C,EAAA8C,iBACAC,GAAA/C,EAAA+C,eACAC,GAAAhD,EAAAgD,eACAC,GAAAjD,EAAAiD,eACAC,GAAAlD,EAAAkD,iBACAC,GAAAnD,EAAAmD,YACAC,GAAApD,EAAAoD,YACAC,GAAArD,EAAAqD,YACAC,GAAAtD,EAAAsD,eACAC,GAAAvD,EAAAuD,oBACAC,GAAAxD,EAAAwD,iBACAC,GAAAzD,EAAAyD,aACAC,GAAA1D,EAAA0D,gBACAC,GAAA3D,EAAA2D,iBACAC,GAAA5D,EAAA4D,kBACAC,GAAA7D,EAAA6D,oBACAC,GAAA9D,EAAA8D,eACAC,GAAA/D,EAAA+D,oBACAC,GAAAhE,EAAAgE,gBACAC,GAAAjE,EAAAiE,gBACAC,GAAAlE,EAAAkE,aACAC,GAAAnE,EAAAmE,kBACAC,GAAApE,EAAAoE,aACAC,GAAArE,EAAAqE,gBACAC,GAAAtE,EAAAsE,WACA/E,GAAAS,EAAAT,kBAIAgF,GAAA1F,EAAAF,EACA6F,GAAAD,GAAA1F,EACA4F,GAAA5C,EAAAqC,GAAAI,GAAAI,MAAAH,GAAAC,IACAG,GAAAzH,KAAAgB,aACA0G,GAAoB9K,EAAA,EAAC+K,MAAAC,KAAAC,IAAAJ,GAAAF,GAAAnJ,OAAA,IAErB0J,GAAAb,GAAAc,KAAA,SAAAC,GACA,OAAAA,EAAAC,SAEAC,GAAAjD,GAAAgC,GAAAc,KAAA,SAAAC,GACA,OAAAA,EAAA/C,aAwBAkD,GArBA,SAAAC,EAAAC,GACA,IAAAC,EAAA3J,UAAAP,OAAA,QAAAP,IAAAc,UAAA,GAAAA,UAAA,MACA4J,EAAA5J,UAAAP,OAAA,QAAAP,IAAAc,UAAA,GAAAA,UAAA,MACA,OAAA0J,EAAAG,IAAA,SAAAC,EAAAtL,GAEA,IAAAuL,EAAAlK,EAAA,GAA4CiK,EAAA,CAC5CE,WAFAJ,GAAA,IAIAK,EAAAN,EAAAO,OAAA,CAAA1L,IACA,GAAAuL,EAAArD,IAA8CzI,EAAA,EAACkM,IAAA/G,GAAA6G,GAAA,CAC/C,IAAAG,EAAAX,EAAAM,EAAArD,GAAAuD,EAAAL,GAEAS,EAAA/L,EAAA8L,EAAA,GAEAL,EAAArD,GAAA2D,EAAA,GACAT,EAAAS,EAAA,GAEA,OAAAN,IACSH,GAGTH,CAAAb,IAEA0B,GAAAhM,EAAAkL,GAAA,GAEAZ,GAAA0B,GAAA,GAGA,IAAAC,GAAAzH,EAAA,EACA0H,GAAA1H,EAAA,EAAAkE,GAEAyD,GAAwBxM,EAAA,EAACyM,IAAApC,GAAAuB,IAAA,SAAAR,GACzB,IAAAsB,EAAAnH,GAAAoH,KAAA,SAAAC,GACA,OAAAA,EAAAC,KAAAzB,EAAAyB,MACS,GACT,OAAe7M,EAAA,EAAC8M,gBAAAJ,EAAAnL,MAAA6J,EAAA2B,MAAA3B,EAAA4B,aAGhBC,IAAA,EAEAC,GAAAtL,EAAA,GAAkCsE,EAAA,CAClCuE,YACAC,UACAC,YACAE,WACAC,WACAI,mBACAoB,eACAC,WACAC,iBAGAW,GAAsBnN,EAAA,EAACoN,WAAA9G,EAAA4G,QAAAjM,SAAAmC,OACvBiK,GAAuBrN,EAAA,EAACoN,WAAA7G,EAAA2G,QAAAjM,SAAAmC,OACxBkK,GAAuBtN,EAAA,EAACoN,WAAAnG,EAAAiG,QAAAjM,SAAAmC,OACxBmK,GAAA9F,EAAAyF,QAAAjM,SAAAmC,MACAoK,GAAA9F,EAAAwF,QAAAjM,SAAAmC,MAIAqK,GAAA,SAAAC,EAAAnN,GACA,IAAAoN,EAAA,SAAAC,GACA,OAAArI,GAAAoH,KAAA,SAAAC,GACA,OAAAA,EAAAC,KAAAe,EAAAf,MACW,IAAOtL,OAElBsM,EAAmB7N,EAAA,EAACyM,IAAAiB,EAAAI,QAAAlC,IAAA,SAAAgC,GACpB,OAAAA,EAAAb,OAAAY,EAAAC,GAAA,EAAAA,EAAAZ,YAEAD,EAAoB/M,EAAA,EAACyM,IAAAiB,EAAAI,QAAAlC,IAAA,SAAAgC,GACrB,OAAiB5N,EAAA,EAAC8M,gBAAAa,EAAAC,KAAAb,MAAAa,EAAAZ,aAElBe,EAAuB/N,EAAA,EAACyM,IAAAiB,EAAAI,QAAAlC,IAAA,SAAAgC,GACxB,OAAiB5N,EAAA,EAAC8M,gBAAAa,EAAAC,KAAAb,MAAAa,EAAAG,aAGlBC,EAAgChO,EAAA,EAACoN,WAAA1G,EAAAwG,QAAAjM,EAAAyM,EAAAzH,IACjCgI,EAAgCjO,EAAA,EAACoN,WAAAM,EAAAQ,eAAAhB,QAAAjM,EAAAyM,EAAAzH,IAEjCkI,EAAA,CAAAT,EAAAU,gBAAAJ,EAAA5H,UAAA6H,EAAA7H,WAEAiI,EAAAzM,EAAA,GAAgC8L,EAAAY,YAAAN,EAAA3H,MAAA4H,EAAA5H,OAEhCkI,EAAA3M,EAAA,GAA8BoM,EAAAO,KAAAN,EAAAM,MAE9BC,EAAA,CACAX,OAAA,UACAd,MAAiB/M,EAAA,EAACyO,KAAA1B,GAClBgB,SAAoB/N,EAAA,EAACyO,KAAAV,IAGrB,OAAenO,EAAA8O,EAAKC,cACpBrF,GACA1H,EAAA,CACAK,IAAA1B,EAAA,IAAAmN,EAAAb,GACAzG,UAAuBrG,IAAUoO,GACjC9H,MAAAzE,EAAA,GAA8ByM,EAAAG,IACnBD,GACDvO,EAAA,EAAC4O,mBAAAlB,EAAAmB,OAAA,CACXC,KAAAtE,GACAkD,aA2BAqB,GAAA,SAAArB,EAAAnN,GACA,IAAAyO,EAAAzJ,GAAAoH,KAAA,SAAAC,GACA,OAAAA,EAAAC,KAAAa,EAAAb,MACS,GACToC,EAAAhK,GAAA0H,KAAA,SAAAvB,GACA,OAAAA,EAAAyB,KAAAa,EAAAb,KAEAqC,EAAA,mBAAAxB,EAAAwB,KAAAxB,EAAAwB,OAAAxB,EAAAwB,KACAnC,EAAoB/M,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAV,UACrBe,EAAuB/N,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAK,UACxBoB,EAA2BnP,EAAA,EAACoN,WAAAvG,EAAAqG,QAAAjM,EAAAyM,EAAAzH,IAC5BgI,EAAgCjO,EAAA,EAACoN,WAAAM,EAAAQ,eAAAhB,QAAAjM,EAAAyM,EAAAzH,IAEjCkI,EAAA,CAAAT,EAAAU,gBAAAe,EAAA/I,UAAA6H,EAAA7H,WAEAiI,EAAAzM,EAAA,GAAgC8L,EAAAY,YAAAa,EAAA9I,MAAA4H,EAAA5H,OAEhCkI,EAAA3M,EAAA,GAA8BuN,EAAAZ,KAAAN,EAAAM,MAE9Ba,EAA0BpP,EAAA,EAAC8M,gBAAAY,EAAAtF,aAAA,GAC3BiH,EAAAD,EAAoCxP,EAAA8O,EAAKC,cAAA9E,GAAAjI,EAAA,CACzC0N,YAAA,SAAAC,GACA,OAAAtJ,EAAAxB,kBAAA8K,EAAA7B,GAAA,IAEA8B,aAAA,SAAAD,GACA,OAAAtJ,EAAAxB,kBAAA8K,EAAA7B,GAAA,KAES/F,EAAA,kBAAA1G,EAAAyM,EAAAzH,KAAA,KAETwJ,EAAyBzP,EAAA,EAAC8M,gBAAAY,EAAAxF,YAAA,GAE1B,OAAetI,EAAA8O,EAAKC,cACpBrF,GACA1H,EAAA,CACAK,IAAA1B,EAAA,IAAAmN,EAAAb,GACAzG,UAAuBrG,IAAUoO,EAAAiB,GAAA,sBAAAH,IAAAS,KAAA,4BAAAD,GAAA,mBAAAP,GAAA,UAAA1G,KAAAoC,MAAA,MAAA+E,SAAAjC,EAAAb,KAAA,mBACjCxG,MAAAzE,EAAA,GAA8ByM,EAAA,CAC9BR,KAAAd,EAAA,UACAA,MAAqB/M,EAAA,EAACyO,KAAA1B,GACtBgB,SAAwB/N,EAAA,EAACyO,KAAAV,KAEzB6B,WAAA,SAAAL,GACAE,GAAAxJ,EAAA1B,WAAAmJ,IAAAvF,GAAAoH,EAAAM,YAEWtB,GACD3O,EAAA8O,EAAKC,cACf,MACA,CAAavI,UAAYrG,IAAUqP,GAAA,gCACvBpP,EAAA,EAAC4O,mBAAAlB,EAAAmB,OAAA,CACbC,KAAAtE,GACAkD,YAGA2B,IA0BAS,GAAA,SAAApC,EAAAnN,GACA,IAAAyO,EAAAzJ,GAAAoH,KAAA,SAAAC,GACA,OAAAA,EAAAC,KAAAa,EAAAb,MACS,GACTE,EAAoB/M,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAV,UACrBe,EAAuB/N,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAK,UACxBgC,EAAiC/P,EAAA,EAACoN,WAAApG,EAAAkG,QAAAjM,EAAAyM,EAAAzH,IAClCgI,EAAgCjO,EAAA,EAACoN,WAAAM,EAAAQ,eAAAhB,QAAAjM,EAAAyM,EAAAzH,IAEjCkI,EAAA,CAAAT,EAAAU,gBAAA2B,EAAA3J,UAAA6H,EAAA7H,WAEAiI,EAAAzM,EAAA,GAAgC8L,EAAAY,YAAAyB,EAAA1J,MAAA4H,EAAA5H,OAEhCkI,EAAA3M,EAAA,GAA8BmO,EAAAxB,KAAAN,EAAAM,MAE9ByB,EAAA3K,GAAAsH,KAAA,SAAAqD,GACA,OAAAA,EAAAnD,KAAAa,EAAAb,KAGAoD,EAAAvC,EAAAwC,QAAAhG,GAEAiG,EAA2BnQ,EAAA,EAAC8M,gBAAAY,EAAArF,cAAA,GAE5B,OAAezI,EAAA8O,EAAKC,cACpBrF,GACA1H,EAAA,CACAK,IAAA1B,EAAA,IAAAmN,EAAAb,GACAzG,UAAuBrG,IAAUoO,GACjC9H,MAAAzE,EAAA,GAA8ByM,EAAA,CAC9BR,KAAAd,EAAA,UACAA,MAAqB/M,EAAA,EAACyO,KAAA1B,GACtBgB,SAAwB/N,EAAA,EAACyO,KAAAV,MAEdQ,GACX4B,EAAyBnQ,EAAA,EAAC4O,mBAAAqB,EAAA,CAC1BvC,SACAsC,SACAI,SAAA,SAAA7O,GACA,OAAA0E,EAAAzB,aAAAkJ,EAAAnM,KAEapB,EAAA,EAAYuN,OAAAwC,QAAA,OA4NzBG,GAAA,SAAA3C,EAAAnN,GACA,IAAAyO,EAAAzJ,GAAAoH,KAAA,SAAAC,GACA,OAAAA,EAAAC,KAAAa,EAAAb,MACS,GACTqC,EAAA,mBAAAxB,EAAAwB,KAAAxB,EAAAwB,OAAAxB,EAAAwB,KACAnC,EAAoB/M,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAV,UACrBa,EAAAd,EACAgB,EAAuB/N,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAK,UACxBuC,EAAsBtQ,EAAA,EAACoN,WAAAhG,EAAA8F,QAAAjM,EAAAyM,EAAAzH,IACvBsK,EAA0BvQ,EAAA,EAACoN,WAAAM,EAAApH,SAAA4G,QAAAjM,EAAAyM,EAAAzH,IAE3BkI,EAAA,CAAAmC,EAAAlK,UAAAsH,EAAAtH,UAAAmK,EAAAnK,WAEAiI,EAAAzM,EAAA,GAAgC0O,EAAAjK,MAAAqH,EAAArH,MAAAkK,EAAAlK,OAEhC,OAAezG,EAAA8O,EAAKC,cACpBpF,GACA3H,EAAA,CACAK,IAAA1B,EAAA,IAAAmN,EAAAb,GACAzG,UAAuBrG,IAAUoO,GAAAe,GAAA,UACjC7I,MAAAzE,EAAA,GAA8ByM,EAAA,CAC9BR,OAAA,UACAd,MAAqB/M,EAAA,EAACyO,KAAA1B,GACtBgB,SAAwB/N,EAAA,EAACyO,KAAAV,MAEduC,EAAA/B,MACDvO,EAAA,EAAC4O,mBAAAzE,MAIXqG,GAAA,SAAA3E,EAAAtL,GACA,IAAAkQ,EAAAvJ,EAAAgG,QAAAjM,SAAAgF,GACAyK,EAAsB1Q,EAAA,EAACoN,WAAAjG,EAAA+F,QAAAjM,SAAAgF,IACvB,OAAerG,EAAA8O,EAAKC,cACpBvF,GACAxH,EAAA,CAAoBK,IAAA,OAAA1B,GAAkBkQ,GAC5B7Q,EAAA8O,EAAKC,cACftF,GACA,CACAjD,UAAyBrG,IAAU,WAAA4K,GAAAnJ,OAAAjB,GAAA,iBAAAmQ,EAAAtK,WACnCC,MAAAqK,EAAArK,OAAA,IAEAgE,GAAAuB,IAAAyE,OAKAM,GAAA,SAAAjD,EAAAnN,GACA,IAAAyO,EAAAzJ,GAAAoH,KAAA,SAAAC,GACA,OAAAA,EAAAC,KAAAa,EAAAb,MACS,GACTqC,EAAA,mBAAAxB,EAAAwB,KAAAxB,EAAAwB,OAAAxB,EAAAwB,KACAnC,EAAoB/M,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAV,UACrBe,EAAuB/N,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAK,UACxB6C,EAA2B5Q,EAAA,EAACoN,WAAA7F,EAAA2F,QAAAjM,SAAAgF,IAC5BsK,EAA0BvQ,EAAA,EAACoN,WAAAM,EAAApH,SAAA4G,QAAAjM,EAAAyM,EAAAzH,IAC3B4K,EAAgC7Q,EAAA,EAACoN,WAAAM,EAAAoD,eAAA5D,QAAAjM,EAAAyM,EAAAzH,IAEjCkI,EAAA,CAAAyC,EAAAxK,UAAAsH,EAAAtH,UAAAmK,EAAAnK,UAAAyK,EAAAzK,WAEAiI,EAAAzM,EAAA,GAAgCgP,EAAAvK,MAAAqH,EAAArH,MAAAkK,EAAAlK,MAAAwK,EAAAxK,OAEhC,OAAezG,EAAA8O,EAAKC,cACpBpF,GACA3H,EAAA,CACAK,IAAA1B,EAAA,IAAAmN,EAAAb,GACAzG,UAAuBrG,IAAUoO,GAAAe,GAAA,UACjC7I,MAAAzE,EAAA,GAA8ByM,EAAA,CAC9BR,KAAAd,EAAA,UACAA,MAAqB/M,EAAA,EAACyO,KAAA1B,GACtBgB,SAAwB/N,EAAA,EAACyO,KAAAV,MAEdwC,EAAAhC,KAAAqC,EAAArC,KAAAsC,EAAAtC,MACDvO,EAAA,EAAC4O,mBAAAlB,EAAArC,OAAA,CACXyD,KAAAtE,GACAkD,aA2BAqD,GAAA,SAAAC,GACA,IAAAC,EAA8BjR,EAAA,EAACoN,WAAA5F,EAAA0F,QAAAjM,SAAAgF,IAC/B,OAAerG,EAAA8O,EAAKC,cAAAlF,GAAA7H,EAAA,GAA+CsE,EAAA,CACnE6C,SACAuD,eACAC,WACAlI,aAAA4B,EAAA5B,aACAC,iBAAA2B,EAAA3B,iBACA8B,UAAA6K,EAAA7K,UACAC,MAAA4K,EAAA5K,MACA2K,SACSC,EAAA1C,QAGT2C,GAAA,WACA,OAAetR,EAAA8O,EAAKC,cACpB,MACA/M,EAAA,CACAwE,UAAuBrG,IAAU,aAAAqG,EAAA+G,GAAA/G,WACjCC,MAAAzE,EAAA,GAA8ByE,EAAA8G,GAAA9G,QACnB8G,GAAAoB,MACX3G,GAAAC,EAAgDjI,EAAA8O,EAAKC,cACrD,MACA,CAAavI,UAAA,kBACb2K,IAAA,IACA,KACUnR,EAAA8O,EAAKC,cACf1F,GACArH,EAAA,CACAwE,UAAyBrG,IAAUsN,GAAAjH,UAAAX,GAAA,kBACnCY,MAAAgH,GAAAhH,OACagH,GAAAkB,MACbhE,IA9eA4G,EAA8BnR,EAAA,EAACoN,WAAA5G,EAAA0G,QAAAjM,SAAAgF,IAC/BmL,EAAgCpR,EAAA,EAACoN,WAAA3G,EAAAyG,QAAAjM,SAAAgF,IAClBrG,EAAA8O,EAAKC,cACpBzF,GACAtH,EAAA,CACAwE,UAAuBrG,IAAU,gBAAAoR,EAAA/K,WACjCC,MAAAzE,EAAA,GAA8BuP,EAAA9K,MAAA,CAC9B2G,SAAAR,GAAA,QAEW2E,EAAA5C,MACD3O,EAAA8O,EAAKC,cACftF,GACAzH,EAAA,CACAwE,UAAAgL,EAAAhL,UACAC,MAAA+K,EAAA/K,OACa+K,EAAA7C,MACbjE,GAAAsB,IAAA6B,OA8dA,MA/ZA4D,EAAyBrR,EAAA,EAACoN,WAAAzG,EAAAuG,QAAAjM,SAAAgF,IAC1BqL,EAA2BtR,EAAA,EAACoN,WAAAxG,EAAAsG,QAAAjM,SAAAgF,IACbrG,EAAA8O,EAAKC,cACpBzF,GACAtH,EAAA,CACAwE,UAAuBrG,IAAU,UAAAsR,EAAAjL,WACjCC,MAAAzE,EAAA,GAA8ByP,EAAAhL,MAAA,CAC9B2G,SAAAR,GAAA,QAEW6E,EAAA9C,MACD3O,EAAA8O,EAAKC,cACftF,GACAzH,EAAA,CACAwE,UAAAkL,EAAAlL,UACAC,MAAAiL,EAAAjL,OACaiL,EAAA/C,MACblE,GAAAuB,IAAAmD,OAiZAzD,IA/VAiG,EAA+BvR,EAAA,EAACoN,WAAAtG,EAAAoG,QAAAjM,SAAAgF,IAChCuL,EAAiCxR,EAAA,EAACoN,WAAArG,EAAAmG,QAAAjM,SAAAgF,IACnBrG,EAAA8O,EAAKC,cACpBzF,GACAtH,EAAA,CACAwE,UAAuBrG,IAAU,WAAAwR,EAAAnL,WACjCC,MAAAzE,EAAA,GAA8B2P,EAAAlL,MAAA,CAC9B2G,SAAAR,GAAA,QAEW+E,EAAAhD,MACD3O,EAAA8O,EAAKC,cACftF,GACAzH,EAAA,CACAwE,UAAAoL,EAAApL,UACAC,MAAAmL,EAAAnL,OACamL,EAAAjD,MACblE,GAAAuB,IAAAkE,OA+UA,KACYlQ,EAAA8O,EAAKC,cACjBxF,GACAvH,EAAA,CACAwE,UAA2BrG,IAAUuN,GAAAlH,WACrCC,MAAAzE,EAAA,GAAkC0L,GAAAjH,MAAA,CAClC2G,SAAAR,GAAA,QAEec,GAAAiB,MACf5D,GAAAiB,IAAA,SAAAR,EAAA7K,GACA,OApVA,SAAAkR,EAAA5F,EAAAtL,GACA,IAAAmL,EAAA3J,UAAAP,OAAA,QAAAP,IAAAc,UAAA,GAAAA,UAAA,MAEA2P,EAAA,CACAC,SAAA9F,EAAAlD,GACAkD,MACAF,MAAAE,EAAAjD,GACAgJ,UAAA3E,IAAA,EACAlI,WACAF,OACAgN,MAAAnG,EAAAlK,OACAsQ,YAAApG,EAAAO,OAAA,CAAA1L,IACAwR,WAAAlG,EAAAnD,GACAsJ,eAAAnG,EAAAhD,GACAoJ,QAAApG,EAAApD,IAEAyJ,EAAyBlS,EAAA,EAACkM,IAAA/G,GAAAuM,EAAAI,aAC1BrB,EAAAvJ,EAAAgG,GAAAwE,OAAAzQ,EAAAgF,GACAyK,EAAsB1Q,EAAA,EAACoN,WAAAjG,EAAA+F,GAAAwE,OAAAzQ,EAAAgF,IACvB,OAAerG,EAAA8O,EAAKC,cACpBvF,GACAxH,EAAA,CAAoBK,IAAAyP,EAAAI,YAAAK,KAAA,MAAqC1B,GAC/C7Q,EAAA8O,EAAKC,cACftF,GACAzH,EAAA,CACAwE,UAAyBrG,IAAU2Q,EAAAtK,UAAAyF,EAAAE,WAAA,kBACnC1F,MAAAqK,EAAArK,OACaqK,EAAAnC,MACblE,GAAAuB,IAAA,SAAA8B,EAAA0E,GACA,IAAApD,EAAAzJ,GAAAoH,KAAA,SAAAC,GACA,OAAAA,EAAAC,KAAAa,EAAAb,MACe,GACfqC,EAAA,mBAAAxB,EAAAwB,KAAAxB,EAAAwB,OAAAxB,EAAAwB,KACAnC,EAA0B/M,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAV,UAC3Be,EAA6B/N,EAAA,EAAC8M,gBAAAkC,EAAAzN,MAAAmM,EAAAX,MAAAW,EAAAK,UAC9BuC,EAA4BtQ,EAAA,EAACoN,WAAAhG,EAAA8F,GAAAwE,EAAAhE,EAAAzH,IAC7BsK,EAAgCvQ,EAAA,EAACoN,WAAAM,EAAApH,SAAA4G,GAAAwE,EAAAhE,EAAAzH,IAEjCkI,EAAA,CAAAmC,EAAAlK,UAAAsH,EAAAtH,UAAAmK,EAAAnK,WAEAiI,EAAAzM,EAAA,GAAsC0O,EAAAjK,MAAAqH,EAAArH,MAAAkK,EAAAlK,OAEtCgM,EAAAzQ,EAAA,GAAwC8P,EAAA,CACxCQ,aACAxE,OAAA9L,EAAA,GAAmC8L,GACnCnM,MAAAmQ,EAAA7F,IAAA6B,EAAAb,IACAyF,QAAA5E,EAAA4E,QACAC,SAAA7E,EAAA6E,SACAhN,WACA2J,OACAnC,QACAgB,WACAuC,UACAC,cACApC,UACAE,WAGA9M,EAAA8Q,EAAA9Q,MAEAiR,OAAA,EACAC,OAAA,EACAC,OAAA,EAkBAC,EAAiC3S,EAAA,EAAC4O,mBAAAlB,EAAAkF,KAAAP,EAAA9Q,GAGlCsR,EAAAnF,EAAAoF,aAAApF,EAAAqF,UAAArF,EAAAkF,KAAA3I,IACA+I,EAAAtF,EAAAuF,UAAAnJ,GACAoJ,EAAAxF,EAAAyF,YAAApJ,GACAqJ,EAAApJ,IAAA,SAAAzH,GACA,OAAuB3C,EAAA8O,EAAKC,cAC5B,MACA,KACkB/O,EAAA8O,EAAKC,cAAAqE,EAAAzQ,GACL3C,EAAA8O,EAAKC,cAAAuE,EAAA3Q,KAGvB8Q,EAAA3F,EAAA4F,OAAAF,GAGAf,EAAAC,SAAAD,EAAAE,YAEAF,EAAAkB,YAAA,EACAf,GAAA,GAGAH,EAAAC,SAAAD,EAAAJ,SAAAtI,KACA0I,EAAAkB,YAAA,IAIAlB,EAAAC,SAEAG,EAAAf,EAAA7F,IAAAvD,KAAAoF,EAAAb,IAAAwF,EAAAJ,QAEAS,EAAAlK,EAAAgL,QAAA9F,EAAAb,IAAArE,EAAAgL,QAAA9B,EAAA7F,IAAAvD,KAAA+J,EAAAJ,QAIAU,EAFAF,EAEiCzS,EAAA,EAAC4O,mBAAAyE,EAAAzR,EAAA,GAAuDyQ,EAAA,CACzF9Q,MAAAsK,EAAAtD,KACmBsD,EAAAtD,IACFmK,EAEgB1S,EAAA,EAAC4O,mBAAAiE,EAAAR,EAAA9Q,GAElC,MAEe8Q,EAAAN,aACfY,EAA+B3S,EAAA,EAAC4O,mBAAAiE,EAAAR,EAAA9Q,IAGhC8Q,EAAAE,WACAI,EAA+B3S,EAAA,EAAC4O,mBAAAoE,EAAAX,EAAAxG,EAAAtD,IAChCC,IACA6J,EAAAL,iBACAW,EAAA,MAEAN,EAAAJ,SAAAtI,KACAgJ,EAAA,QAKA,IAAAc,EAAAjB,EA7EA,SAAAjD,GACA,IAAAmE,EAAkC1T,EAAA,EAAC2T,MAAAxO,IAOnC,OALAuO,EADAxB,EACgClS,EAAA,EAAC4T,IAAAF,EAAArB,EAAAP,aAAA,GAED9R,EAAA,EAAC4T,IAAAF,EAAArB,EAAAP,YAAA,IAGjC7L,EAAA4N,iBAAA,CACA1O,SAAAuO,GACiB,WACjB,OAAA1K,OAAA0K,EAAArB,EAAAP,YAAAvC,MAkEA,aAKAuE,EAAA,CACAC,QAAAN,GAoBA,OAjBAnD,EAAA/B,KAAAwF,UACAD,EAAAC,QAAA,SAAAxE,GACAe,EAAA/B,KAAAwF,QAAAxE,EAAA,WACA,OAAAkE,EAAAlE,OAKAgB,EAAAhC,KAAAwF,UACAD,EAAAC,QAAA,SAAAxE,GACAgB,EAAAhC,KAAAwF,QAAAxE,EAAA,WACA,OAAAkE,EAAAlE,OAMqB3P,EAAA8O,EAAKC,cAC1BpF,GAGA3H,EAAA,CAA0BK,IAAAmQ,EAAA,IAAA1E,EAAAb,GAC1BzG,UAA6BrG,IAAUoO,GAAAkE,EAAAkB,aAAArE,GAAA,SAAAmD,EAAAkB,YAAA,iBAAAd,GAAAC,IAAA,YACvCrM,MAAAzE,EAAA,GAAoCyM,EAAA,CACpCR,KAAAd,EAAA,UACAA,MAA2B/M,EAAA,EAACyO,KAAA1B,GAC5BgB,SAA8B/N,EAAA,EAACyO,KAAAV,MAEduC,EAAA/B,KAAAgC,EAAAhC,KAAAuF,GACjBnB,MAIAjB,EAAAO,SAAAC,GAAAR,EAAAO,QAAArG,IAAA,SAAAR,EAAA7K,GACA,OAAAkR,EAAArG,EAAA7K,EAAAmR,EAAAI,eAEAnI,KAAA+H,EAAAO,SAAAC,GAAAvI,GAAA+H,EAAA,WACA,IAAAgC,EAA8B1T,EAAA,EAAC2T,MAAAxO,IAEnBnF,EAAA,EAAC4T,IAAAF,EAAAhC,EAAAI,aAAA,MAuJbL,CAAArG,EAAA7K,KAEAuK,GAAAc,IAAA4E,KAEAtF,IArEA8I,EAAyBhU,EAAA,EAACoN,WAAA/F,EAAA6F,QAAAjM,SAAAgF,IAC1BgO,EAA2BjU,EAAA,EAACoN,WAAA9F,EAAA4F,QAAAjM,SAAAgF,IACbrG,EAAA8O,EAAKC,cACpBnF,GACA5H,EAAA,CACAwE,UAAA4N,EAAA5N,UACAC,MAAAzE,EAAA,GAA8BoS,EAAA3N,MAAA,CAC9B2G,SAAAR,GAAA,QAEWwH,EAAAzF,MACD3O,EAAA8O,EAAKC,cACftF,GACAzH,EAAA,CACAwE,UAAyBrG,IAAUkU,EAAA7N,WACnCC,MAAA4N,EAAA5N,OACa4N,EAAA1F,MACblE,GAAAuB,IAAA+E,OAqDA,MAEA/I,GAAAE,EAAmDlI,EAAA8O,EAAKC,cACxD,MACA,CAAavI,UAAA,qBACb2K,IAAA,IACA,MACApG,GAAAnJ,QAA8B5B,EAAA8O,EAAKC,cACnC/E,GACA4D,GACYxN,EAAA,EAAC4O,mBAAA3G,IAEHrI,EAAA8O,EAAKC,cAAAjF,GAAA9H,EAAA,CAA2CkH,UAAAd,eAA6CuF,MAlFvG,IACAyG,EACAC,EAzSA1C,EACAC,EAnEAH,EACAC,EAhFAH,EACAC,GA8gBA,OAAAjL,IAAA+G,GAAAgE,GAAA9N,MAAA8N,SAIAlO,EAtwBA,GAywBAA,EAAAkR,UAAuB9T,EAAA,EACvB4C,EAAAmR,aAA0BhU,EAAA,EACXiU,EAAA","file":"js/059746c3a3851aad3536.js","sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\n//\nimport _ from './utils';\nimport Lifecycle from './lifecycle';\nimport Methods from './methods';\nimport defaultProps from './defaultProps';\nimport propTypes from './propTypes';\n\nexport var ReactTableDefaults = defaultProps;\n\nvar ReactTable = function (_Methods) {\n  _inherits(ReactTable, _Methods);\n\n  function ReactTable(props) {\n    _classCallCheck(this, ReactTable);\n\n    var _this = _possibleConstructorReturn(this, (ReactTable.__proto__ || Object.getPrototypeOf(ReactTable)).call(this));\n\n    _this.getResolvedState = _this.getResolvedState.bind(_this);\n    _this.getDataModel = _this.getDataModel.bind(_this);\n    _this.getSortedData = _this.getSortedData.bind(_this);\n    _this.fireFetchData = _this.fireFetchData.bind(_this);\n    _this.getPropOrState = _this.getPropOrState.bind(_this);\n    _this.getStateOrProp = _this.getStateOrProp.bind(_this);\n    _this.filterData = _this.filterData.bind(_this);\n    _this.sortData = _this.sortData.bind(_this);\n    _this.getMinRows = _this.getMinRows.bind(_this);\n    _this.onPageChange = _this.onPageChange.bind(_this);\n    _this.onPageSizeChange = _this.onPageSizeChange.bind(_this);\n    _this.sortColumn = _this.sortColumn.bind(_this);\n    _this.filterColumn = _this.filterColumn.bind(_this);\n    _this.resizeColumnStart = _this.resizeColumnStart.bind(_this);\n    _this.resizeColumnEnd = _this.resizeColumnEnd.bind(_this);\n    _this.resizeColumnMoving = _this.resizeColumnMoving.bind(_this);\n\n    _this.state = {\n      page: props.defaultPage,\n      pageSize: props.defaultPageSize,\n      sorted: props.defaultSorted,\n      expanded: props.defaultExpanded,\n      filtered: props.defaultFiltered,\n      resized: props.defaultResized,\n      currentlyResizing: false,\n      skipNextSort: false\n    };\n    return _this;\n  }\n\n  _createClass(ReactTable, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var resolvedState = this.getResolvedState();\n      var children = resolvedState.children,\n          className = resolvedState.className,\n          style = resolvedState.style,\n          getProps = resolvedState.getProps,\n          getTableProps = resolvedState.getTableProps,\n          getTheadGroupProps = resolvedState.getTheadGroupProps,\n          getTheadGroupTrProps = resolvedState.getTheadGroupTrProps,\n          getTheadGroupThProps = resolvedState.getTheadGroupThProps,\n          getTheadProps = resolvedState.getTheadProps,\n          getTheadTrProps = resolvedState.getTheadTrProps,\n          getTheadThProps = resolvedState.getTheadThProps,\n          getTheadFilterProps = resolvedState.getTheadFilterProps,\n          getTheadFilterTrProps = resolvedState.getTheadFilterTrProps,\n          getTheadFilterThProps = resolvedState.getTheadFilterThProps,\n          getTbodyProps = resolvedState.getTbodyProps,\n          getTrGroupProps = resolvedState.getTrGroupProps,\n          getTrProps = resolvedState.getTrProps,\n          getTdProps = resolvedState.getTdProps,\n          getTfootProps = resolvedState.getTfootProps,\n          getTfootTrProps = resolvedState.getTfootTrProps,\n          getTfootTdProps = resolvedState.getTfootTdProps,\n          getPaginationProps = resolvedState.getPaginationProps,\n          getLoadingProps = resolvedState.getLoadingProps,\n          getNoDataProps = resolvedState.getNoDataProps,\n          getResizerProps = resolvedState.getResizerProps,\n          showPagination = resolvedState.showPagination,\n          showPaginationTop = resolvedState.showPaginationTop,\n          showPaginationBottom = resolvedState.showPaginationBottom,\n          manual = resolvedState.manual,\n          loadingText = resolvedState.loadingText,\n          noDataText = resolvedState.noDataText,\n          sortable = resolvedState.sortable,\n          multiSort = resolvedState.multiSort,\n          resizable = resolvedState.resizable,\n          filterable = resolvedState.filterable,\n          pivotIDKey = resolvedState.pivotIDKey,\n          pivotValKey = resolvedState.pivotValKey,\n          pivotBy = resolvedState.pivotBy,\n          subRowsKey = resolvedState.subRowsKey,\n          aggregatedKey = resolvedState.aggregatedKey,\n          originalKey = resolvedState.originalKey,\n          indexKey = resolvedState.indexKey,\n          groupedByPivotKey = resolvedState.groupedByPivotKey,\n          loading = resolvedState.loading,\n          pageSize = resolvedState.pageSize,\n          page = resolvedState.page,\n          sorted = resolvedState.sorted,\n          filtered = resolvedState.filtered,\n          resized = resolvedState.resized,\n          expanded = resolvedState.expanded,\n          pages = resolvedState.pages,\n          onExpandedChange = resolvedState.onExpandedChange,\n          TableComponent = resolvedState.TableComponent,\n          TheadComponent = resolvedState.TheadComponent,\n          TbodyComponent = resolvedState.TbodyComponent,\n          TrGroupComponent = resolvedState.TrGroupComponent,\n          TrComponent = resolvedState.TrComponent,\n          ThComponent = resolvedState.ThComponent,\n          TdComponent = resolvedState.TdComponent,\n          TfootComponent = resolvedState.TfootComponent,\n          PaginationComponent = resolvedState.PaginationComponent,\n          LoadingComponent = resolvedState.LoadingComponent,\n          SubComponent = resolvedState.SubComponent,\n          NoDataComponent = resolvedState.NoDataComponent,\n          ResizerComponent = resolvedState.ResizerComponent,\n          ExpanderComponent = resolvedState.ExpanderComponent,\n          PivotValueComponent = resolvedState.PivotValueComponent,\n          PivotComponent = resolvedState.PivotComponent,\n          AggregatedComponent = resolvedState.AggregatedComponent,\n          FilterComponent = resolvedState.FilterComponent,\n          PadRowComponent = resolvedState.PadRowComponent,\n          resolvedData = resolvedState.resolvedData,\n          allVisibleColumns = resolvedState.allVisibleColumns,\n          headerGroups = resolvedState.headerGroups,\n          hasHeaderGroups = resolvedState.hasHeaderGroups,\n          sortedData = resolvedState.sortedData,\n          currentlyResizing = resolvedState.currentlyResizing;\n\n      // Pagination\n\n      var startRow = pageSize * page;\n      var endRow = startRow + pageSize;\n      var pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow);\n      var minRows = this.getMinRows();\n      var padRows = _.range(Math.max(minRows - pageRows.length, 0));\n\n      var hasColumnFooter = allVisibleColumns.some(function (d) {\n        return d.Footer;\n      });\n      var hasFilters = filterable || allVisibleColumns.some(function (d) {\n        return d.filterable;\n      });\n\n      var recurseRowsViewIndex = function recurseRowsViewIndex(rows) {\n        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n        return [rows.map(function (row, i) {\n          index += 1;\n          var rowWithViewIndex = _extends({}, row, {\n            _viewIndex: index\n          });\n          var newPath = path.concat([i]);\n          if (rowWithViewIndex[subRowsKey] && _.get(expanded, newPath)) {\n            var _recurseRowsViewIndex = recurseRowsViewIndex(rowWithViewIndex[subRowsKey], newPath, index);\n\n            var _recurseRowsViewIndex2 = _slicedToArray(_recurseRowsViewIndex, 2);\n\n            rowWithViewIndex[subRowsKey] = _recurseRowsViewIndex2[0];\n            index = _recurseRowsViewIndex2[1];\n          }\n          return rowWithViewIndex;\n        }), index];\n      };\n\n      var _recurseRowsViewIndex3 = recurseRowsViewIndex(pageRows);\n\n      var _recurseRowsViewIndex4 = _slicedToArray(_recurseRowsViewIndex3, 1);\n\n      pageRows = _recurseRowsViewIndex4[0];\n\n\n      var canPrevious = page > 0;\n      var canNext = page + 1 < pages;\n\n      var rowMinWidth = _.sum(allVisibleColumns.map(function (d) {\n        var resizedColumn = resized.find(function (x) {\n          return x.id === d.id;\n        }) || {};\n        return _.getFirstDefined(resizedColumn.value, d.width, d.minWidth);\n      }));\n\n      var rowIndex = -1;\n\n      var finalState = _extends({}, resolvedState, {\n        startRow: startRow,\n        endRow: endRow,\n        pageRows: pageRows,\n        minRows: minRows,\n        padRows: padRows,\n        hasColumnFooter: hasColumnFooter,\n        canPrevious: canPrevious,\n        canNext: canNext,\n        rowMinWidth: rowMinWidth\n      });\n\n      var rootProps = _.splitProps(getProps(finalState, undefined, undefined, this));\n      var tableProps = _.splitProps(getTableProps(finalState, undefined, undefined, this));\n      var tBodyProps = _.splitProps(getTbodyProps(finalState, undefined, undefined, this));\n      var loadingProps = getLoadingProps(finalState, undefined, undefined, this);\n      var noDataProps = getNoDataProps(finalState, undefined, undefined, this);\n\n      // Visual Components\n\n      var makeHeaderGroup = function makeHeaderGroup(column, i) {\n        var resizedValue = function resizedValue(col) {\n          return (resized.find(function (x) {\n            return x.id === col.id;\n          }) || {}).value;\n        };\n        var flex = _.sum(column.columns.map(function (col) {\n          return col.width || resizedValue(col) ? 0 : col.minWidth;\n        }));\n        var width = _.sum(column.columns.map(function (col) {\n          return _.getFirstDefined(resizedValue(col), col.width, col.minWidth);\n        }));\n        var maxWidth = _.sum(column.columns.map(function (col) {\n          return _.getFirstDefined(resizedValue(col), col.width, col.maxWidth);\n        }));\n\n        var theadGroupThProps = _.splitProps(getTheadGroupThProps(finalState, undefined, column, _this2));\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadGroupThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadGroupThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadGroupThProps.rest, columnHeaderProps.rest);\n\n        var flexStyles = {\n          flex: flex + ' 0 auto',\n          width: _.asPx(width),\n          maxWidth: _.asPx(maxWidth)\n        };\n\n        return React.createElement(\n          ThComponent,\n          _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes),\n            style: _extends({}, styles, flexStyles)\n          }, rest),\n          _.normalizeComponent(column.Header, {\n            data: sortedData,\n            column: column\n          })\n        );\n      };\n\n      var makeHeaderGroups = function makeHeaderGroups() {\n        var theadGroupProps = _.splitProps(getTheadGroupProps(finalState, undefined, undefined, _this2));\n        var theadGroupTrProps = _.splitProps(getTheadGroupTrProps(finalState, undefined, undefined, _this2));\n        return React.createElement(\n          TheadComponent,\n          _extends({\n            className: classnames('-headerGroups', theadGroupProps.className),\n            style: _extends({}, theadGroupProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, theadGroupProps.rest),\n          React.createElement(\n            TrComponent,\n            _extends({\n              className: theadGroupTrProps.className,\n              style: theadGroupTrProps.style\n            }, theadGroupTrProps.rest),\n            headerGroups.map(makeHeaderGroup)\n          )\n        );\n      };\n\n      var makeHeader = function makeHeader(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var sort = sorted.find(function (d) {\n          return d.id === column.id;\n        });\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n        var theadThProps = _.splitProps(getTheadThProps(finalState, undefined, column, _this2));\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadThProps.rest, columnHeaderProps.rest);\n\n        var isResizable = _.getFirstDefined(column.resizable, resizable, false);\n        var resizer = isResizable ? React.createElement(ResizerComponent, _extends({\n          onMouseDown: function onMouseDown(e) {\n            return _this2.resizeColumnStart(e, column, false);\n          },\n          onTouchStart: function onTouchStart(e) {\n            return _this2.resizeColumnStart(e, column, true);\n          }\n        }, getResizerProps('finalState', undefined, column, _this2))) : null;\n\n        var isSortable = _.getFirstDefined(column.sortable, sortable, false);\n\n        return React.createElement(\n          ThComponent,\n          _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes, isResizable && 'rt-resizable-header', sort ? sort.desc ? '-sort-desc' : '-sort-asc' : '', isSortable && '-cursor-pointer', !show && '-hidden', pivotBy && pivotBy.slice(0, -1).includes(column.id) && 'rt-header-pivot'),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            }),\n            toggleSort: function toggleSort(e) {\n              if (isSortable) _this2.sortColumn(column, multiSort ? e.shiftKey : false);\n            }\n          }, rest),\n          React.createElement(\n            'div',\n            { className: classnames(isResizable && 'rt-resizable-header-content') },\n            _.normalizeComponent(column.Header, {\n              data: sortedData,\n              column: column\n            })\n          ),\n          resizer\n        );\n      };\n\n      var makeHeaders = function makeHeaders() {\n        var theadProps = _.splitProps(getTheadProps(finalState, undefined, undefined, _this2));\n        var theadTrProps = _.splitProps(getTheadTrProps(finalState, undefined, undefined, _this2));\n        return React.createElement(\n          TheadComponent,\n          _extends({\n            className: classnames('-header', theadProps.className),\n            style: _extends({}, theadProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, theadProps.rest),\n          React.createElement(\n            TrComponent,\n            _extends({\n              className: theadTrProps.className,\n              style: theadTrProps.style\n            }, theadTrProps.rest),\n            allVisibleColumns.map(makeHeader)\n          )\n        );\n      };\n\n      var makeFilter = function makeFilter(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n        var theadFilterThProps = _.splitProps(getTheadFilterThProps(finalState, undefined, column, _this2));\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadFilterThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadFilterThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadFilterThProps.rest, columnHeaderProps.rest);\n\n        var filter = filtered.find(function (filter) {\n          return filter.id === column.id;\n        });\n\n        var ResolvedFilterComponent = column.Filter || FilterComponent;\n\n        var isFilterable = _.getFirstDefined(column.filterable, filterable, false);\n\n        return React.createElement(\n          ThComponent,\n          _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            })\n          }, rest),\n          isFilterable ? _.normalizeComponent(ResolvedFilterComponent, {\n            column: column,\n            filter: filter,\n            onChange: function onChange(value) {\n              return _this2.filterColumn(column, value);\n            }\n          }, defaultProps.column.Filter) : null\n        );\n      };\n\n      var makeFilters = function makeFilters() {\n        var theadFilterProps = _.splitProps(getTheadFilterProps(finalState, undefined, undefined, _this2));\n        var theadFilterTrProps = _.splitProps(getTheadFilterTrProps(finalState, undefined, undefined, _this2));\n        return React.createElement(\n          TheadComponent,\n          _extends({\n            className: classnames('-filters', theadFilterProps.className),\n            style: _extends({}, theadFilterProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, theadFilterProps.rest),\n          React.createElement(\n            TrComponent,\n            _extends({\n              className: theadFilterTrProps.className,\n              style: theadFilterTrProps.style\n            }, theadFilterTrProps.rest),\n            allVisibleColumns.map(makeFilter)\n          )\n        );\n      };\n\n      var makePageRow = function makePageRow(row, i) {\n        var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n        var rowInfo = {\n          original: row[originalKey],\n          row: row,\n          index: row[indexKey],\n          viewIndex: rowIndex += 1,\n          pageSize: pageSize,\n          page: page,\n          level: path.length,\n          nestingPath: path.concat([i]),\n          aggregated: row[aggregatedKey],\n          groupedByPivot: row[groupedByPivotKey],\n          subRows: row[subRowsKey]\n        };\n        var isExpanded = _.get(expanded, rowInfo.nestingPath);\n        var trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, _this2);\n        var trProps = _.splitProps(getTrProps(finalState, rowInfo, undefined, _this2));\n        return React.createElement(\n          TrGroupComponent,\n          _extends({ key: rowInfo.nestingPath.join('_') }, trGroupProps),\n          React.createElement(\n            TrComponent,\n            _extends({\n              className: classnames(trProps.className, row._viewIndex % 2 ? '-even' : '-odd'),\n              style: trProps.style\n            }, trProps.rest),\n            allVisibleColumns.map(function (column, i2) {\n              var resizedCol = resized.find(function (x) {\n                return x.id === column.id;\n              }) || {};\n              var show = typeof column.show === 'function' ? column.show() : column.show;\n              var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n              var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n              var tdProps = _.splitProps(getTdProps(finalState, rowInfo, column, _this2));\n              var columnProps = _.splitProps(column.getProps(finalState, rowInfo, column, _this2));\n\n              var classes = [tdProps.className, column.className, columnProps.className];\n\n              var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n              var cellInfo = _extends({}, rowInfo, {\n                isExpanded: isExpanded,\n                column: _extends({}, column),\n                value: rowInfo.row[column.id],\n                pivoted: column.pivoted,\n                expander: column.expander,\n                resized: resized,\n                show: show,\n                width: width,\n                maxWidth: maxWidth,\n                tdProps: tdProps,\n                columnProps: columnProps,\n                classes: classes,\n                styles: styles\n              });\n\n              var value = cellInfo.value;\n\n              var useOnExpanderClick = void 0;\n              var isBranch = void 0;\n              var isPreview = void 0;\n\n              var onExpanderClick = function onExpanderClick(e) {\n                var newExpanded = _.clone(expanded);\n                if (isExpanded) {\n                  newExpanded = _.set(newExpanded, cellInfo.nestingPath, false);\n                } else {\n                  newExpanded = _.set(newExpanded, cellInfo.nestingPath, {});\n                }\n\n                return _this2.setStateWithData({\n                  expanded: newExpanded\n                }, function () {\n                  return onExpandedChange && onExpandedChange(newExpanded, cellInfo.nestingPath, e);\n                });\n              };\n\n              // Default to a standard cell\n              var resolvedCell = _.normalizeComponent(column.Cell, cellInfo, value);\n\n              // Resolve Renderers\n              var ResolvedAggregatedComponent = column.Aggregated || (!column.aggregate ? AggregatedComponent : column.Cell);\n              var ResolvedExpanderComponent = column.Expander || ExpanderComponent;\n              var ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent;\n              var DefaultResolvedPivotComponent = PivotComponent || function (props) {\n                return React.createElement(\n                  'div',\n                  null,\n                  React.createElement(ResolvedExpanderComponent, props),\n                  React.createElement(ResolvedPivotValueComponent, props)\n                );\n              };\n              var ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent;\n\n              // Is this cell expandable?\n              if (cellInfo.pivoted || cellInfo.expander) {\n                // Make it expandable by defualt\n                cellInfo.expandable = true;\n                useOnExpanderClick = true;\n                // If pivoted, has no subRows, and does not have a subComponent,\n                // do not make expandable\n                if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n                  cellInfo.expandable = false;\n                }\n              }\n\n              if (cellInfo.pivoted) {\n                // Is this column a branch?\n                isBranch = rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows;\n                // Should this column be blank?\n                isPreview = pivotBy.indexOf(column.id) > pivotBy.indexOf(rowInfo.row[pivotIDKey]) && cellInfo.subRows;\n                // Pivot Cell Render Override\n                if (isBranch) {\n                  // isPivot\n                  resolvedCell = _.normalizeComponent(ResolvedPivotComponent, _extends({}, cellInfo, {\n                    value: row[pivotValKey]\n                  }), row[pivotValKey]);\n                } else if (isPreview) {\n                  // Show the pivot preview\n                  resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n                } else {\n                  resolvedCell = null;\n                }\n              } else if (cellInfo.aggregated) {\n                resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n              }\n\n              if (cellInfo.expander) {\n                resolvedCell = _.normalizeComponent(ResolvedExpanderComponent, cellInfo, row[pivotValKey]);\n                if (pivotBy) {\n                  if (cellInfo.groupedByPivot) {\n                    resolvedCell = null;\n                  }\n                  if (!cellInfo.subRows && !SubComponent) {\n                    resolvedCell = null;\n                  }\n                }\n              }\n\n              var resolvedOnExpanderClick = useOnExpanderClick ? onExpanderClick : function () {};\n\n              // If there are multiple onClick events, make sure they don't\n              // override eachother. This should maybe be expanded to handle all\n              // function attributes\n              var interactionProps = {\n                onClick: resolvedOnExpanderClick\n              };\n\n              if (tdProps.rest.onClick) {\n                interactionProps.onClick = function (e) {\n                  tdProps.rest.onClick(e, function () {\n                    return resolvedOnExpanderClick(e);\n                  });\n                };\n              }\n\n              if (columnProps.rest.onClick) {\n                interactionProps.onClick = function (e) {\n                  columnProps.rest.onClick(e, function () {\n                    return resolvedOnExpanderClick(e);\n                  });\n                };\n              }\n\n              // Return the cell\n              return React.createElement(\n                TdComponent\n                // eslint-disable-next-line react/no-array-index-key\n                ,\n                _extends({ key: i2 + '-' + column.id,\n                  className: classnames(classes, !cellInfo.expandable && !show && 'hidden', cellInfo.expandable && 'rt-expandable', (isBranch || isPreview) && 'rt-pivot'),\n                  style: _extends({}, styles, {\n                    flex: width + ' 0 auto',\n                    width: _.asPx(width),\n                    maxWidth: _.asPx(maxWidth)\n                  })\n                }, tdProps.rest, columnProps.rest, interactionProps),\n                resolvedCell\n              );\n            })\n          ),\n          rowInfo.subRows && isExpanded && rowInfo.subRows.map(function (d, i) {\n            return makePageRow(d, i, rowInfo.nestingPath);\n          }),\n          SubComponent && !rowInfo.subRows && isExpanded && SubComponent(rowInfo, function () {\n            var newExpanded = _.clone(expanded);\n\n            _.set(newExpanded, rowInfo.nestingPath, false);\n          })\n        );\n      };\n\n      var makePadColumn = function makePadColumn(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n        var flex = width;\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n        var tdProps = _.splitProps(getTdProps(finalState, undefined, column, _this2));\n        var columnProps = _.splitProps(column.getProps(finalState, undefined, column, _this2));\n\n        var classes = [tdProps.className, column.className, columnProps.className];\n\n        var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n        return React.createElement(\n          TdComponent,\n          _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes, !show && 'hidden'),\n            style: _extends({}, styles, {\n              flex: flex + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            })\n          }, tdProps.rest),\n          _.normalizeComponent(PadRowComponent)\n        );\n      };\n\n      var makePadRow = function makePadRow(row, i) {\n        var trGroupProps = getTrGroupProps(finalState, undefined, undefined, _this2);\n        var trProps = _.splitProps(getTrProps(finalState, undefined, undefined, _this2));\n        return React.createElement(\n          TrGroupComponent,\n          _extends({ key: 'pad-' + i }, trGroupProps),\n          React.createElement(\n            TrComponent,\n            {\n              className: classnames('-padRow', (pageRows.length + i) % 2 ? '-even' : '-odd', trProps.className),\n              style: trProps.style || {}\n            },\n            allVisibleColumns.map(makePadColumn)\n          )\n        );\n      };\n\n      var makeColumnFooter = function makeColumnFooter(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n        var tFootTdProps = _.splitProps(getTfootTdProps(finalState, undefined, undefined, _this2));\n        var columnProps = _.splitProps(column.getProps(finalState, undefined, column, _this2));\n        var columnFooterProps = _.splitProps(column.getFooterProps(finalState, undefined, column, _this2));\n\n        var classes = [tFootTdProps.className, column.className, columnProps.className, columnFooterProps.className];\n\n        var styles = _extends({}, tFootTdProps.style, column.style, columnProps.style, columnFooterProps.style);\n\n        return React.createElement(\n          TdComponent,\n          _extends({\n            key: i + '-' + column.id,\n            className: classnames(classes, !show && 'hidden'),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            })\n          }, columnProps.rest, tFootTdProps.rest, columnFooterProps.rest),\n          _.normalizeComponent(column.Footer, {\n            data: sortedData,\n            column: column\n          })\n        );\n      };\n\n      var makeColumnFooters = function makeColumnFooters() {\n        var tFootProps = _.splitProps(getTfootProps(finalState, undefined, undefined, _this2));\n        var tFootTrProps = _.splitProps(getTfootTrProps(finalState, undefined, undefined, _this2));\n        return React.createElement(\n          TfootComponent,\n          _extends({\n            className: tFootProps.className,\n            style: _extends({}, tFootProps.style, {\n              minWidth: rowMinWidth + 'px'\n            })\n          }, tFootProps.rest),\n          React.createElement(\n            TrComponent,\n            _extends({\n              className: classnames(tFootTrProps.className),\n              style: tFootTrProps.style\n            }, tFootTrProps.rest),\n            allVisibleColumns.map(makeColumnFooter)\n          )\n        );\n      };\n\n      var makePagination = function makePagination(isTop) {\n        var paginationProps = _.splitProps(getPaginationProps(finalState, undefined, undefined, _this2));\n        return React.createElement(PaginationComponent, _extends({}, resolvedState, {\n          pages: pages,\n          canPrevious: canPrevious,\n          canNext: canNext,\n          onPageChange: _this2.onPageChange,\n          onPageSizeChange: _this2.onPageSizeChange,\n          className: paginationProps.className,\n          style: paginationProps.style,\n          isTop: isTop\n        }, paginationProps.rest));\n      };\n\n      var makeTable = function makeTable() {\n        return React.createElement(\n          'div',\n          _extends({\n            className: classnames('ReactTable', className, rootProps.className),\n            style: _extends({}, style, rootProps.style)\n          }, rootProps.rest),\n          showPagination && showPaginationTop ? React.createElement(\n            'div',\n            { className: 'pagination-top' },\n            makePagination(true)\n          ) : null,\n          React.createElement(\n            TableComponent,\n            _extends({\n              className: classnames(tableProps.className, currentlyResizing ? 'rt-resizing' : ''),\n              style: tableProps.style\n            }, tableProps.rest),\n            hasHeaderGroups ? makeHeaderGroups() : null,\n            makeHeaders(),\n            hasFilters ? makeFilters() : null,\n            React.createElement(\n              TbodyComponent,\n              _extends({\n                className: classnames(tBodyProps.className),\n                style: _extends({}, tBodyProps.style, {\n                  minWidth: rowMinWidth + 'px'\n                })\n              }, tBodyProps.rest),\n              pageRows.map(function (d, i) {\n                return makePageRow(d, i);\n              }),\n              padRows.map(makePadRow)\n            ),\n            hasColumnFooter ? makeColumnFooters() : null\n          ),\n          showPagination && showPaginationBottom ? React.createElement(\n            'div',\n            { className: 'pagination-bottom' },\n            makePagination(false)\n          ) : null,\n          !pageRows.length && React.createElement(\n            NoDataComponent,\n            noDataProps,\n            _.normalizeComponent(noDataText)\n          ),\n          React.createElement(LoadingComponent, _extends({ loading: loading, loadingText: loadingText }, loadingProps))\n        );\n      };\n\n      // childProps are optionally passed to a function-as-a-child\n      return children ? children(finalState, makeTable, this) : makeTable();\n    }\n  }]);\n\n  return ReactTable;\n}(Methods(Lifecycle(Component)));\n\nReactTable.propTypes = propTypes;\nReactTable.defaultProps = defaultProps;\nexport default ReactTable;\n//# sourceMappingURL=data:application/json;base64,"],"sourceRoot":""}