{"version":3,"sources":["webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/cancel/CancelToken.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/core/createError.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/cancel/isCancel.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/cancel/Cancel.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/core/Axios.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/core/settle.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/core/enhanceError.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/core/InterceptorManager.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/core/dispatchRequest.js","webpack:////home/marco/Documents/BeCode/BeBook/node_modules/axios/lib/core/transformData.js"],"names":["Cancel","__webpack_require__","CancelToken","executor","TypeError","resolvePromise","this","promise","Promise","resolve","token","message","reason","prototype","throwIfRequested","source","cancel","c","module","exports","enhanceError","config","code","request","response","error","Error","value","__CANCEL__","toString","defaults","utils","InterceptorManager","dispatchRequest","Axios","instanceConfig","interceptors","merge","url","arguments","method","toLowerCase","chain","undefined","forEach","interceptor","unshift","fulfilled","rejected","push","length","then","shift","data","createError","reject","validateStatus","status","handlers","use","eject","id","fn","h","transformData","isCancel","isAbsoluteURL","combineURLs","throwIfCancellationRequested","cancelToken","baseURL","headers","transformRequest","common","adapter","transformResponse","fns"],"mappings":"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","file":"js/38feffbdf250c2fc7097.js","sourcesContent":["'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n"],"sourceRoot":""}