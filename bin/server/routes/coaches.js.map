{"version":3,"sources":["../../../src/server/routes/coaches.js"],"names":["router","express","Router","get","_req","res","User","find","err","users","status","send","json","post","req","avatar","gravatar","url","body","email","s","r","d","newUser","firstName","lastName","password","role","bcrypt","genSalt","salt","hash","save","then","user","catch","_id","params","id","put","findByIdAndUpdate","new","delete","deleteOne","Book","books","tags","tag","book","isbn","parseInt","isbnNumber","replace","isbnCover","resolve","item","title","author","language","cover","imageLinks","smallThumbnail","formats","split","console","log","Borrowing","borrowings","Review","bookId","reviews","findOne","userId","data","error","comment","rating","message"],"mappings":"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","sourcesContent":["import express from \"express\";\nimport gravatar from \"gravatar\";\nimport bcrypt from \"bcryptjs\";\nimport isbnCover from \"node-isbn\";\nimport Book from \"../models/Book\";\nimport Borrowing from \"../models/Borrowing\";\nimport User from \"../models/User\";\nimport Review from \"../models/Review\";\n\nconst router = new express.Router();\n\n// -------------------------------------------------------------------------- //\n\n// Retrieve the collection of User resources.\nrouter.get(\"/users\", (_req, res) => {\n    User.find({}, (err, users) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.json(users);\n    });\n});\n\n// Create an User resource.\nrouter.post(\"/users\", (req, res) => {\n    const avatar = gravatar.url(req.body.email, {\n        s: 200,\n        r: \"pg\",\n        d: \"mm\",\n    });\n\n    const newUser = new User({\n        firstName: req.body.firstName,\n        lastName: req.body.lastName,\n        email: req.body.email,\n        avatar,\n        password: req.body.password,\n        role: req.body.role || \"junior\",\n    });\n\n    bcrypt.genSalt(10, (err, salt) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        // eslint-disable-next-line no-shadow\n        bcrypt.hash(newUser.password, salt, (err, hash) => {\n            if (err) {\n                return res.status(500).send(err);\n            }\n            newUser.password = hash;\n            newUser\n                .save()\n                .then(user => res.status(201).json(user))\n                // eslint-disable-next-line no-shadow\n                .catch(err => res.status(500).send(err));\n        });\n    });\n});\n\n// Retrieve an User resource.\nrouter.get(\"/users/:id\", (req, res) => {\n    User.find({_id: req.params.id}, (err, user) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(user);\n    });\n});\n\n// Replace the User resource.\nrouter.put(\"/users/:id\", (req, res) => {\n    User.findByIdAndUpdate(\n        req.params.id,\n        req.body,\n        {new: true},\n        (err, user) => {\n            if (err) {\n                return res.status(500).send(err);\n            }\n            return res.status(200).json(user);\n        },\n    );\n});\n\n// Remove the User resource.\nrouter.delete(\"/users/:id\", (req, res) => {\n    User.deleteOne({_id: req.params.id}, err => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).send(\"The user has been successfully deleted!\");\n    });\n});\n\n// -------------------------------------------------------------------------- //\n\n// Retrieve the collection of Book resources.\nrouter.get(\"/books\", (_req, res) => {\n    Book.find({}, (err, books) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(books);\n    });\n});\n\n// Retrieve the collection of Book resources by a single tag.\nrouter.get(\"/books/:tag\", (req, res) => {\n    Book.find({tags: req.params.tag}, (err, book) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(book);\n    });\n});\n\n// Create a Book resource.\nrouter.post(\"/books\", (req, res) => {\n    const isbn = parseInt(req.body.isbnNumber.replace(\"-\", \"\"));\n\n    // Get book cover from ISBN number and then save the Book resource.\n    isbnCover\n        .resolve(isbn)\n        .then(item => {\n            new Book({\n                title: req.body.title,\n                author: req.body.author,\n                language: req.body.language,\n                isbnNumber: isbn,\n                cover: item.imageLinks.smallThumbnail,\n                formats: req.body.formats.split(\",\"),\n                tags: req.body.tags.split(\",\"),\n            })\n                .save()\n                .then(book => res.status(201).json(book))\n                .catch(err => res.status(500).json(err));\n        })\n        .catch(err => {\n            console.log(\"Book not found\", err);\n        });\n});\n\n// Retrieve a Book resource.\nrouter.get(\"/books/:id\", (req, res) => {\n    Book.find({_id: req.params.id}, (err, book) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(book);\n    });\n});\n\n// Replace the Book resource.\nrouter.put(\"/books/:id\", (req, res) => {\n    Book.findByIdAndUpdate(\n        req.params.id,\n        req.body,\n        {new: true},\n        (err, book) => {\n            if (err) {\n                return res.status(500).send(err);\n            }\n            return res.status(200).json(book);\n        },\n    );\n});\n\n// Remove the Book resource.\nrouter.delete(\"/books/:id\", (req, res) => {\n    Book.deleteOne({_id: req.params.id}, err => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).send(\"The book has been successfully deleted!\");\n    });\n});\n\n// -------------------------------------------------------------------------- //\n\n// Retrieve the collection of Borrowing resources.\nrouter.get(\"/borrowings\", (_req, res) => {\n    Borrowing.find({}, (err, borrowings) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(borrowings);\n    });\n});\n\n// -------------------------------------------------------------------------- //\n\n// Retrieve the collection of Review resources by Book.\nrouter.get(\"/books/:bookId/reviews\", (req, res) => {\n    Review.find({book: req.params.bookId}, (err, reviews) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(reviews);\n    });\n});\n\n// Send a new review about a book.\nrouter.post(\"/reviews/:bookId\", (req, res) => {\n    Review.findOne({author: req.body.userId, book: req.params.bookId}).then(\n        data => {\n            if (data) {\n                return res.status(400).json({error: \"Review already exist!\"});\n            }\n\n            new Review({\n                author: req.body.userId,\n                book: req.params.bookId,\n                comment: req.body.comment,\n                rating: req.body.rating,\n            }).save();\n\n            return res.json({message: \"ok\"});\n        },\n    );\n});\n\n// Delete a specified review.\nrouter.delete(\"/reviews/:id\", (req, res) => {\n    Review.deleteOne({_id: req.params.id}, err => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n\n        return res.json({message: \"The review has been successfully deleted!\"});\n    });\n});\n\n// Update a specified review.\nrouter.put(\"/reviews/:id\", (req, res) => {\n    Review.findOne({_id: req.params.id}).then(data => {\n        data.comment = req.body.comment;\n        data.save();\n        return res.json(data);\n    });\n});\n\nexport default router;\n"],"file":"coaches.js"}