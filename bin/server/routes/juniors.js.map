{"version":3,"sources":["../../../src/server/routes/juniors.js"],"names":["router","express","Router","get","req","res","User","findById","user","id","err","status","send","json","put","findByIdAndUpdate","body","new","_req","Book","find","books","tags","params","tag","book","_id","Borrowing","borrower","borrowings","post","bookId","state","dueDate","Date","now","borrowedBy","exec","save","then","borrowing","catch","Review","reviews","findOne","author","data","message","comment","rating","review","averageRating","reduce","a","b","length","delete","reviewId","toString","userId","error","deleteOne","newContent"],"mappings":"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","sourcesContent":["import express from \"express\";\nimport Book from \"../models/Book\";\nimport Borrowing from \"../models/Borrowing\";\nimport User from \"../models/User\";\nimport Review from \"../models/Review\";\n\nconst router = new express.Router();\n\n// -------------------------------------------------------------------------- //\n\n// Retrieve the User profile.\nrouter.get(\"/profile\", (req, res) => {\n    User.findById(req.user.id, (err, user) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(user);\n    });\n});\n\n// Replace the User profile.\nrouter.put(\"/profile\", (req, res) => {\n    User.findByIdAndUpdate(req.user.id, req.body, {new: true}, (err, user) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(user);\n    });\n});\n\n// -------------------------------------------------------------------------- //\n\n// Retrieve the collection of Book resources.\nrouter.get(\"/books\", (_req, res) => {\n    Book.find({}, (err, books) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(books);\n    });\n});\n\n// Retrieve the collection of Book resources by a single tag.\nrouter.get(\"/books/:tag\", (req, res) => {\n    Book.find({tags: req.params.tag}, (err, book) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(book);\n    });\n});\n\n// Retrieve a Book resource.\nrouter.get(\"/books/:id\", (req, res) => {\n    Book.find({_id: req.params.id}, (err, book) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(book);\n    });\n});\n\n// -------------------------------------------------------------------------- //\n\n// Retrieve the user's collection of Borrowing resources.\nrouter.get(\"/borrowings\", (req, res) => {\n    Borrowing.find({borrower: req.user.id}, (err, borrowings) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(borrowings);\n    });\n});\n\n// Create the user's Borrowing resource.\nrouter.post(\"/borrowings/:bookId\", (req, res) => {\n    // Change the book's state to unavailable and its due date.\n    Book.findByIdAndUpdate(req.params.bookId, {\n        state: \"unavailable\",\n        dueDate: () => Date.now() + 7 * 24 * 60 * 60 * 1000,\n        borrowedBy: req.user.id,\n    }).exec();\n\n    // Finally, create the new borrowing and return it as JSON.\n    new Borrowing({\n        borrower: req.user.id,\n        book: req.params.bookId,\n    })\n        .save()\n        .then(borrowing => res.status(201).json(borrowing))\n        .catch(err => res.status(500).json(err));\n});\n\n// -------------------------------------------------------------------------- //\n\n// Retrieve the collection of Review resources by Book.\nrouter.get(\"/books/:bookId/reviews\", (req, res) => {\n    Review.find({book: req.params.bookId}, (err, reviews) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n        return res.status(200).json(reviews);\n    });\n});\n\n// Send a new review about a book.\nrouter.post(\"/reviews/:bookId\", (req, res) => {\n    Review.findOne({author: req.user.id, book: req.params.bookId}).then(\n        data => {\n            if (data) {\n                return res.status(400).json({message: \"Review already exist!\"});\n            }\n\n            // Create a new Review resource.\n            new Review({\n                author: req.user.id,\n                book: req.params.bookId,\n                comment: req.body.comment,\n                rating: req.body.rating,\n            })\n                .save()\n                .then(review => {\n                    res.status(200).json(review);\n                })\n                // And finally, recompute the average rating of the Book resource.\n                .then(() => {\n                    Review.find({}).then(reviews => {\n                        Book.findByIdAndUpdate(req.body.bookId, {\n                            averageRating:\n                                reviews.reduce((a, b) => a + b.rating, 0) /\n                                reviews.length,\n                        }).exec();\n                    });\n                })\n                .catch(err => res.status(500).json(err));\n        },\n    );\n});\n\n// Delete a specified review.\nrouter.delete(\"/reviews\", (req, res) => {\n    Review.findOne({_id: req.body.reviewId}, (err, data) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n\n        if (data.author.toString() !== req.body.userId) {\n            return res\n                .status(400)\n                .json({error: \"You can delete your reviews only!\"});\n        }\n\n        Review.deleteOne(data, error => {\n            if (error) {\n                return res.status(500).send(error);\n            }\n\n            return res.json({\n                message: \"The review has been successfully deleted!\",\n            });\n        });\n    });\n});\n\n// Update a specified review.\nrouter.put(\"/reviews\", (req, res) => {\n    Review.findOne({_id: req.body.reviewId}, (err, data) => {\n        if (err) {\n            return res.status(500).send(err);\n        }\n\n        if (data.author.toString() !== req.body.userId) {\n            return res\n                .status(400)\n                .json({error: \"You can update your reviews only!\"});\n        }\n\n        data.comment = req.body.newContent;\n        data.save();\n        return res.json(data);\n    });\n});\n\nexport default router;\n"],"file":"juniors.js"}